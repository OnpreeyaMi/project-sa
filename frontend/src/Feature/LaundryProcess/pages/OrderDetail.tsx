import React, { useState } from "react";
import { useParams } from "react-router-dom";
import {
  Card,
  Select,
  Input,
  Button,
  Space,
  message,
  Divider,
  Typography,
  Row,
  Col,
} from "antd";
import EmpSidebar from "../../../component/layout/Sidebar/EmpSidebar";
import StatusCard from "../componemts/StatusCard";
import { GiWashingMachine, GiClothes } from "react-icons/gi";
import { FaCheckCircle } from "react-icons/fa";

const { TextArea } = Input;
const { Title } = Typography;

const OrderDetail: React.FC = () => {
  const { orderId } = useParams();

  const [order, setOrder] = useState({
    orderId,
    customerName: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ",
    address: "123/45 ‡∏ñ‡∏ô‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û ‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤",
    phone: "081-234-5678",
    weight: 12,
    totalItems: 20,
    status: "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
    machine: "",
    note: "",
  });

  const [selectedMachine, setSelectedMachine] = useState<string | null>(null);
  const [note, setNote] = useState("");

  const handleStatusUpdate = (newStatus: string) => {
    setOrder((prev) => ({
      ...prev,
      status: newStatus,
    }));
    message.success(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô: ${newStatus}`);
  };

  const handleSaveMachineNote = () => {
    setOrder((prev) => ({
      ...prev,
      machine: selectedMachine || "",
      note: note || "",
    }));
    message.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
  };

  
return (
  <EmpSidebar>
    <div className="p-6">
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å */}
      <div className="mb-6">
        <Title level={2} className="!text-[#000000] !mb-1 flex items-center gap-2">
          üß∫ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå <span className="text-gray-500 text-lg">#{orderId}</span>
        </Title>
        <Divider className="!my-2 !border-blue-400" />
      </div>

      <Row gutter={[24, 24]}>
        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå */}
        <Col xs={24} md={12}>
          <Card
            bordered
            className="shadow-lg rounded-2xl h-full bg-gradient-to-br from-blue-50 to-white"
            bodyStyle={{ padding: 28 }}
            title={
              <div className="flex items-center gap-2 text-[#20639B] font-bold text-2xl">
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
              </div>
            }
          >
            <div className="space-y-4">
              {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ */}
              <div className="flex items-center justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤  </span>
                <span className="text-lg font-medium">{order.customerName}</span>
              </div>
              {/* ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ */}
              <div className="flex items-center justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£  </span>
                <span className="text-lg font-medium">{order.phone}</span>
              </div>
              {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
              <div className="flex items-start justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà  </span>
                <span className="text-right max-w-[60%]">{order.address}</span>
              </div>
              {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
              <div className="flex items-center justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞  </span>
                <span
                  className={`px-4 py-1 rounded-full text-white text-base font-semibold shadow-sm transition-colors ${
                    order.status === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
                      ? "bg-orange-500"
                      : order.status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å"
                      ? "bg-blue-500"
                      : order.status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ö"
                      ? "bg-purple-500"
                      : "bg-green-600"
                  }`}
                >
                  {order.status}
                </span>
              </div>
              {/* ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ú‡πâ‡∏≤ */}
              <div className="flex items-center justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ú‡πâ‡∏≤  </span>
                <span className="text-lg">{order.weight} kg</span>
              </div>
              {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô */}
              <div className="flex items-center justify-between border-b pb-2">
                <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üß∫ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô  </span>
                <span className="text-lg">{order.totalItems} ‡∏ä‡∏¥‡πâ‡∏ô</span>
              </div>
              {/* ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤ */}
              {order.machine && (
                <div className="flex items-center justify-between border-b pb-2">
                  <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üß≠ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤  </span>
                  <span className="text-lg">{order.machine}</span>
                </div>
              )}
              {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
              {order.note && (
                <div className="flex items-center justify-between">
                  <span className="font-bold text-gray-700" style={{ fontWeight: 'bold' }}>üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏  </span>
                  <span className="text-lg max-w-[60%] text-right">{order.note}</span>
                </div>
              )}
            </div>
          </Card>
        </Col>

        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á + ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ + ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
        <Col xs={24} md={12}>
          <Card
            bordered
            className="shadow-lg rounded-2xl h-full bg-gradient-to-br from-white to-blue-50"
            bodyStyle={{ padding: 28 }}
          >
            <Title level={4} className="!text-[#20639B] !mb-2">üß≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤</Title>
            <Select
              placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á"
              style={{ width: "100%", maxWidth: 240 }}
              onChange={(value) => setSelectedMachine(value)}
              options={[
                { value: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 1", label: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 1" },
                { value: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 2", label: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 2" },
                { value: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 3", label: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà 3" },
              ]}
              className="mb-4"
            />
            <Divider className="!my-3" />
            <Title level={4} className="!text-[#20639B] !mb-2">üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</Title>
            <TextArea
              rows={3}
              value={note}
              onChange={(e) => setNote(e.target.value)}
              placeholder="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏..."
              style={{ marginBottom: 16 }}
            />
            <Button
              type="primary"
              onClick={handleSaveMachineNote}
              disabled={!selectedMachine}
              className="mb-4"
              block
            >
              üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </Button>
            <Divider className="!my-3" />
            {/* Section: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
            <Title level={4} className="!text-[#20639B] !mb-2">üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å</Title>
            <Space wrap>
              <StatusCard
                icon={<GiWashingMachine size={30} />}
                label="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å"
                value="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å"
                isSelected={order.status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å"}
                onClick={handleStatusUpdate}
              />
              <StatusCard
                icon={<GiClothes size={30} />}
                label="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ö"
                value="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ö"
                isSelected={order.status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ö"}
                onClick={handleStatusUpdate}
              />
              <StatusCard
                icon={<FaCheckCircle size={30} />}
                label="‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"
                value="‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"
                isSelected={order.status === "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"}
                onClick={handleStatusUpdate}
              />
            </Space>
          </Card>
        </Col>
      </Row>
    </div>
  </EmpSidebar>
);
};

export default OrderDetail;
